{"version":3,"file":"static/js/10.f236287f.chunk.js","mappings":"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","sources":["components/Users/UserFoto.tsx","webpack://my-app/./src/components/Users/User.module.css?05eb","components/Users/User.tsx","redux/users-selector.ts","components/Users/SearchForm.tsx","webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"sourcesContent":["import React from 'react';\r\nimport {Image, Space} from 'antd';\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport avatarIcon from \"../../common/avatars/user.png\";\r\n\r\ntype userFoto = {\r\n    user: UserType\r\n}\r\nexport const UserFoto: React.FC<userFoto> = (props) => {\r\n    const {user} = props\r\n\r\n\r\n    return (\r\n        <Space size={12}>\r\n            <Image\r\n                width={80}\r\n                style={{borderRadius: '50%'}}\r\n                src={user.photos.large !== null ? user.photos.large : String(avatarIcon)}\r\n                placeholder={\r\n                    <Image\r\n                        preview={false}\r\n                        src={user.photos.small !== null ? user.photos.small : String(avatarIcon)}\r\n                        width={50}\r\n                    />\r\n                }\r\n            />\r\n\r\n        </Space>\r\n    );\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperContainer\":\"User_wrapperContainer__yETBZ\",\"container\":\"User_container__wZLGa\",\"userFoto\":\"User_userFoto__mDo3-\",\"infoUser\":\"User_infoUser__qG9OJ\",\"name\":\"User_name__Yav9X\",\"followBtn\":\"User_followBtn__ny2Ok\"};","import React, {FC, useCallback, useEffect} from \"react\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {UserFoto} from \"./UserFoto\";\r\nimport {Button} from \"antd\";\r\nimport s from './User.module.css'\r\nimport {Link, redirect, useNavigate} from \"react-router-dom\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {startDialog} from \"../../redux/dialogs-reducer\";\r\ntype UserTypeProps = {\r\n    user: UserType\r\n    follow: (userId: number) => void\r\n    followInProgress: number[]\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\n\r\nexport const User: FC<UserTypeProps> = (props) => {\r\n    const {user, follow, followInProgress, unfollow} = props\r\n    const dispatch=useDispatch()\r\nconst navigate=useNavigate()\r\n        const handleStartDialog=(userId:number)=>{\r\n            dispatch(startDialog(userId))\r\n            navigate(`../dialogs/${userId}`,{replace:true})\r\n        }\r\n\r\n\r\n\r\n    return (\r\n        <div key={user.id} className={s.wrapperContainer}>\r\n            <div className={s.container}>\r\n                <div className={s.userFoto}>\r\n                    <UserFoto user={user}/>\r\n                </div>\r\n\r\n                <div className={s.infoUser}>\r\n                    <Link to={'/profile/' + user.id}>\r\n                        <span className={s.name}>{user.name}</span>\r\n                    </Link>\r\n\r\n                    <span>{user.status}</span>\r\n                    <span>{user.location?.country}</span>\r\n                    <span>{user.location?.city}</span>\r\n                </div>\r\n                <div className={s.followBtn}>\r\n                    <div>{user.followed\r\n                        ? <Button\r\n                            disabled={followInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n\r\n                                unfollow(user.id)\r\n\r\n                            }}>UnFollow</Button>\r\n                        : <Button\r\n                            disabled={followInProgress.some(id => id === user.id)}\r\n                            onClick={() => {\r\n                                follow(user.id)\r\n\r\n                            }}>Follow</Button>}</div>\r\n\r\n                    <div><Button onClick={()=>handleStartDialog(user.id)}>\r\n                        Sent message\r\n                    </Button></div>\r\n                </div>\r\n            </div>\r\n\r\n            <hr/>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {AppStateType} from \"../redux/redux-store\";\r\nimport {createSelector} from \"reselect\";\r\n// const getUsersSelector=(state:AppStateType)=>{\r\n//     return state.usersPage.users\r\n// }\r\n// export const getUsers=createSelector(getUsersSelector,\r\n//     (users)=>users.filter(u=>true))\r\nexport const getUsers=(state:AppStateType)=>{\r\nreturn state.usersPage.users\r\n}\r\nexport const getPageSize=(state:AppStateType)=>{\r\n    return state.usersPage.pageSize}\r\n\r\nexport const getTotalUsersCount=(state:AppStateType)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage=(state:AppStateType)=>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching=(state:AppStateType)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowInProgress=(state:AppStateType)=>{\r\n    return state.usersPage.followInProgress\r\n}\r\nexport const getFilters=(state:AppStateType)=>{\r\n    return state.usersPage.filter\r\n}\r\n","import React, {FC, useState} from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getFilters} from \"../../redux/users-selector\";\r\nimport {Button, Input, Select} from \"antd\";\r\nimport {SearchOutlined} from '@ant-design/icons';\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: FC<PropsType> = React.memo(({onFilterChanged}) => {\r\n    const filter = useSelector(getFilters)\r\n\r\n    const handleValue=(value:string)=>{\r\n        formik.setFieldValue('friend',value)\r\n\r\n    }\r\n    const formik = useFormik({\r\n\r\n        enableReinitialize: true,\r\n        validate: () => {\r\n        },\r\n        initialValues: {\r\n            term: filter.term,\r\n            friend: String(filter.friend)\r\n        },\r\n        onSubmit: values => {\r\ndebugger\r\n            const filter: FilterType = {\r\n                term: values.term,\r\n                friend: values.friend === 'null' ? null : values.friend === 'true'\r\n            }\r\n            onFilterChanged(filter)\r\n            formik.resetForm()\r\n        }\r\n\r\n    })\r\n\r\n    return (\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n            <Input style={{width: 250, marginRight: '5px'}}\r\n                   placeholder={'enter user name'} {...formik.getFieldProps('term')}/>\r\n            <Select style={{width: 150, marginRight: '5px'}}\r\n                   value={formik.values.friend}\r\n                    defaultValue={'null'}\r\n            onChange={handleValue}\r\n            options={[{\r\n                value:\"null\", label:'All' },\r\n                {value:\"true\", label:'Followed'},\r\n                {value:\"false\", label:'Unfollowed'}\r\n            ]}\r\n            />\r\n            <Button htmlType={'submit'} type={'primary'} icon={<SearchOutlined/>}\r\n                    color={'primary'}>\r\n                Find\r\n            </Button>\r\n        </form>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperContainer\":\"Users_wrapperContainer__MmIl3\",\"container\":\"Users_container__dla8M\",\"pagination\":\"Users_pagination__DBSHM\"};","import React, {FC, useEffect} from \"react\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {User} from \"./User\";\r\nimport { Pagination } from 'antd';\r\nimport {UsersSearchForm} from \"./SearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFilters,\r\n    getFollowInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\nimport s from './Users.module.css'\r\n\r\nexport const Users: FC = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const search = useLocation().search\r\n    const navigate = useNavigate()\r\n\r\n    const filter = useSelector(getFilters)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const pageSize = useSelector(getPageSize)\r\n    const users = useSelector(getUsers)\r\n    const followInProgress = useSelector(getFollowInProgress)\r\n\r\n    useEffect(() => {\r\n\r\n        let urlTerm = new URLSearchParams(search).get('term')\r\n        let urlFriend = new URLSearchParams(search).get('friend')\r\n        let urlCurrentPageSelect = Number(new URLSearchParams(search).get('page'))\r\n        let urlFriendConvert = urlFriend === 'null' ? null : urlFriend === 'true'\r\n        let actualPage = currentPage\r\n        if (urlCurrentPageSelect) actualPage = urlCurrentPageSelect\r\n        let actualFilter = filter\r\n        if (!!urlTerm) actualFilter = {...actualFilter, term: urlTerm}\r\n        if (!!urlFriend) actualFilter = {...actualFilter, friend: urlFriendConvert}\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        navigate({\r\n            pathname: '/users',\r\n            search: `?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`\r\n        })\r\n\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNum: number) => {\r\n        dispatch(requestUsers(pageNum, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n\r\n        dispatch(requestUsers(currentPage, pageSize, filter))\r\n    }\r\n    const followUser = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n    const unfollowUser = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    return (\r\n        <div className={s.wrapperContainer}>\r\n            <div className={s.container}>\r\n\r\n                <div className={s.pagination}>\r\n                    <Pagination defaultCurrent={1} total={totalUsersCount} onChange={onPageChanged} />\r\n                </div>\r\n                <div className={s.users}>\r\n                    <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n                </div>\r\n                <h2>Samurai</h2>\r\n                <div className={s.user}>\r\n                    {\r\n                        users.map(ul => <User key={ul.id} user={ul} follow={followUser}\r\n                                              unfollow={unfollowUser}\r\n                                              followInProgress={followInProgress}/>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {useSelector} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selector\";\r\n\r\n\r\nconst UsersPage = () => {\r\n    const isFetching = useSelector(getIsFetching)\r\n    return <div>\r\n\r\n        {isFetching ? <Preloader/> : null}\r\n\r\n        <Users/>\r\n    </div>\r\n\r\n}\r\nexport default UsersPage\r\n\r\n\r\n"],"names":["UserFoto","props","user","size","width","style","borderRadius","src","photos","large","String","avatarIcon","placeholder","preview","small","User","follow","followInProgress","unfollow","dispatch","useDispatch","navigate","useNavigate","className","s","to","id","name","status","location","country","city","followed","disabled","some","onClick","userId","startDialog","replace","getUsers","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowInProgress","getFilters","filter","UsersSearchForm","React","onFilterChanged","useSelector","formik","useFormik","enableReinitialize","validate","initialValues","term","friend","onSubmit","values","resetForm","handleSubmit","marginRight","getFieldProps","value","defaultValue","onChange","setFieldValue","options","label","htmlType","type","icon","SearchOutlined","color","Users","search","useLocation","useEffect","urlTerm","URLSearchParams","get","urlFriend","urlCurrentPageSelect","Number","urlFriendConvert","actualPage","actualFilter","requestUsers","pathname","followUser","unfollowUser","defaultCurrent","total","pageNum","map","ul","Preloader"],"sourceRoot":""}