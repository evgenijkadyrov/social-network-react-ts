{"version":3,"file":"static/js/314.8eb7e50c.chunk.js","mappings":"gKACA,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,yDCO3MA,GAAaC,EAAAA,EAAAA,GAAiB,KAkBvBC,GAAsBC,EAAAA,EAAAA,GAAwB,CACvDC,KAAM,wBADyBD,EAjBsC,SAACE,GAEtE,OAEI,kBAAMC,SAAUD,EAAME,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,YAAa,gBAAiBC,KAAM,iBAAkBC,UAAWC,EAAAA,GACxEC,SAAU,CAACC,EAAAA,EAAed,QAG9B,0BACI,mBAAQe,KAAK,SAAb,0BCFVC,EAAa,SAACX,GAChB,OACI,gBAAKY,UAAWC,EAAAA,OAAhB,UACI,SAAC,KAAD,CAAMC,GAAE,kBAAad,EAAMe,IAA3B,SAAkCf,EAAMK,UAO9CW,EAAU,SAAChB,GACb,OACI,0BACI,gBAAKY,UAAWC,EAAAA,QAAhB,SACKb,EAAMiB,a,6BCNvB,GAJwBC,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAd/B,SAACC,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACC,GACtB,MAAO,CAEHC,UAAU,SAACC,GAAsBF,GAASC,EAAAA,EAAAA,GAAUC,SAMxDC,EAAAA,EADoBP,EDiBD,SAAClB,GAEpB,IAAI0B,EAAkB1B,EAAMqB,YAAYM,QAAQC,KAAI,SAAAC,GAAE,OAAI,SAAClB,EAAD,CAAYN,KAAMwB,EAAGxB,KAAMU,GAAIc,EAAGd,QACxFe,EAAmB9B,EAAMqB,YAAYU,SAASH,KAAI,SAAAC,GAAE,OAAI,SAACb,EAAD,CAASC,QAASY,EAAGZ,aAOjF,OACI,iBAAKL,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,cAAhB,SACKa,KAEL,iBAAKd,UAAWC,EAAAA,SAAhB,UACKiB,GACD,SAACjC,EAAD,CAAqBI,SAVnB,SAAC+B,GACZhC,EAAMuB,UAAUS,EAAOR","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__x+oiH\",\"dialog_items\":\"Dialogs_dialog_items__j83nq\",\"dialog\":\"Dialogs_dialog__0HRi1\",\"active\":\"Dialogs_active__qEtFc\",\"messages\":\"Dialogs_messages__xIZYc\",\"message\":\"Dialogs_message__okOEf\"};","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxlengthCreator, requiredField} from \"../../../utiles/validation/validators\";\r\n\r\nexport type FormDataType = {\r\n    message:string\r\n}\r\nconst maxLength100=maxlengthCreator(100)\r\nexport const AddMessageForm: React.FC<InjectedFormProps<FormDataType>> = (props: any) => {\r\n\r\n    return (\r\n\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={'Enter Message'} name={'newMessageBody'} component={TextArea}\r\n                validate={[requiredField, maxLength100]}/>\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"submit\">Sent</button>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n};\r\nexport const AddMessageReduxForm = reduxForm<FormDataType>({\r\n    form: 'dialogAddMessageForm'\r\n})(AddMessageForm)\r\n","import React, {ChangeEvent, createRef} from \"react\";\r\nimport s from \"../Dialogs/Dialogs.module.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {InitialStateType} from \"../../redux/dialogs-reducer\";\r\nimport {AddMessageReduxForm, FormDataType} from \"./Message/Message\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: InitialStateType\r\n    addAnswer: (newMessageBody:any) => void\r\n    updateNewMessageText: (newText: string) => void\r\n    isAuth:boolean\r\n}\r\ntype DialogItemPropsType = {\r\n    name: string,\r\n    id: number\r\n}\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <Link to={`dialogs/${props.id}`}>{props.name}</Link>\r\n        </div>\r\n    )\r\n}\r\ntype MessagePropsType = {\r\n    message: string\r\n}\r\nconst Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div>\r\n            <div className={s.message}>\r\n                {props.message}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Dialogs = (props: DialogsPropsType) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(el => <DialogItem name={el.name} id={el.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(el => <Message message={el.message}/>);\r\n\r\n\r\n\r\nlet addNewMessage=(values:any)=>{\r\n       props.addAnswer(values.newMessageBody)\r\n}\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","\r\nimport {addAnswer} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\r\n\r\nconst mapStateToProps=(state:AppStateType)=>{\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps=(dispatch:Dispatch) =>{\r\n    return {\r\n\r\n        addAnswer:(newMessageBody:any)=>{dispatch(addAnswer(newMessageBody))}\r\n    }\r\n}\r\n\r\n\r\n const DialogsContainer=compose<React.ComponentType>(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default DialogsContainer"],"names":["maxLength100","maxlengthCreator","AddMessageReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","placeholder","name","component","TextArea","validate","requiredField","type","DialogItem","className","s","to","id","Message","message","compose","connect","state","dialogsPage","dispatch","addAnswer","newMessageBody","withAuthRedirect","dialogsElements","dialogs","map","el","messagesElements","messages","values"],"sourceRoot":""}