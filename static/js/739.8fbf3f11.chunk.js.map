{"version":3,"file":"static/js/739.8fbf3f11.chunk.js","mappings":"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","sources":["webpack://my-app/./src/common/Pagination/Pagination.module.css?0156","common/Pagination/Pagination.tsx","webpack://my-app/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selector.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selected\":\"Pagination_selected__vSunf\"};","import React, {useState} from \"react\";\r\nimport styles from './Pagination.module.css'\r\n\r\ntype PaginationType = {\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    pagesToDisplay: number\r\n}\r\n\r\n\r\nexport const Pagination = (props: PaginationType) => {\r\n    const {onPageChanged, currentPage, totalUsersCount, pageSize, pagesToDisplay} = props\r\n    let pages = [];\r\n    const stepPagination=5\r\n    let numberPages = Math.ceil(totalUsersCount / pageSize)\r\n    for (let i = 1; i <= numberPages; i++) {\r\n        pages.push(i)\r\n    }\r\n    //numeration pages\r\n    //const pagesToDisplay = 10;\r\n    const [page, setPage] = useState(currentPage)\r\n    //let startPage = 1\r\n\r\n    let visiablePages =page<5? pages.slice(0 , page + pagesToDisplay):pages.slice(page -stepPagination, page + pagesToDisplay/2)\r\n    const nextPage = (p: number) => {\r\n\r\n        onPageChanged(p)\r\n        setPage(p)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                { page>stepPagination && <button onClick={() => {\r\n                    setPage(page - 5)\r\n                }}>previos\r\n                </button>}\r\n                {visiablePages.map(p => {\r\n                    // return <span onClick={() => { onPageChanged(p)}}\r\n                    return <span onClick={() => nextPage(p)}\r\n                                 className={currentPage === p ? styles.selected : ''}>{p}</span>\r\n                })}\r\n                {page<numberPages-10 && <button onClick={() => {\r\n                    setPage(page + stepPagination)\r\n                }}>next\r\n                </button>}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"Users_userPhoto__i4hUp\"};","import React from \"react\";\r\nimport styles from './Users.module.css'\r\nimport avatarIcon from '../../common/avatars/user.png'\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport {UserType} from \"../../redux/users-reducer\";\r\n\r\ntype UserTypeProps = {\r\n    user: UserType\r\n    follow: (userId: number) => void\r\n    followInProgress: number[]\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\n\r\nexport const User = (props: UserTypeProps) => {\r\n    const {user, follow, followInProgress, unfollow} = props\r\n    return (\r\n        <div key={user.id}>\r\n        <span>\r\n        <Link to={'/profile/' + user.id}>\r\n        <div>\r\n        <img\r\n            src={user.photos.small !== null ? user.photos.small : String(avatarIcon)}\r\n            className={styles.userPhoto}/>\r\n</div>\r\n</Link>\r\n    <div>\r\n        {user.followed\r\n            ? <button\r\n                disabled={followInProgress.some(id => id === user.id)}\r\n                onClick={() => {\r\n\r\n                    unfollow(user.id)\r\n\r\n                }}>UnFollow</button>\r\n            : <button\r\n                disabled={followInProgress.some(id => id === user.id)}\r\n                onClick={() => {\r\n                    follow(user.id)\r\n\r\n                }}>Follow</button>}\r\n\r\n    </div>\r\n</span>\r\n            <span>\r\n                        <span><div>{user.name}</div>\r\n                        <div>{user.status}</div></span>\r\n                        <span><div>{'ul.location.country'}</div>\r\n                        <div>{'ul.location.city'}</div></span>\r\n                    </span>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport {UserType} from \"../../redux/users-reducer\";\r\nimport {Pagination} from \"../../common/Pagination/Pagination\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersType = {\r\n    onPageChanged: (p: number) => void\r\n    currentPage: number\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n    users: Array<UserType>\r\n    followInProgress: number[]\r\n\r\n}\r\n\r\n\r\nexport const Users = (props: UsersType) => {\r\n    const {\r\n        onPageChanged,\r\n        currentPage,\r\n        totalUsersCount,\r\n        pageSize,\r\n        users,\r\n        unfollow,\r\n        follow,\r\n        followInProgress\r\n    } = props\r\n    return (\r\n        <div>\r\n            <Pagination onPageChanged={onPageChanged} currentPage={currentPage}\r\n                        totalUsersCount={totalUsersCount} pageSize={pageSize} pagesToDisplay={10}/>\r\n            <div>\r\n                {\r\n                    users.map(ul => <User key={ul.id} user={ul} follow={follow}\r\n                                          unfollow={unfollow}\r\n                                          followInProgress={followInProgress}/>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {AppStateType} from \"../redux/redux-store\";\r\n\r\n\r\nexport const getUsers=(state:AppStateType)=>{\r\nreturn state.usersPage\r\n}\r\nexport const getPageSize=(state:AppStateType)=>{\r\n    return state.usersPage.pageSize}\r\nexport const getTotalUsersCount=(state:AppStateType)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage=(state:AppStateType)=>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching=(state:AppStateType)=>{\r\n    return state.usersPage.isFetching\r\n}\r\nexport const followInProgress=(state:AppStateType)=>{\r\n    return state.usersPage.followInProgress\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    InitialStateType,\r\n    requistUsers,\r\n    setCurrentPage,\r\n    toogleFollowProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../../common/preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    followInProgress,\r\n    getCurrentPage,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../redux/users-selector\";\r\n\r\ntype mapStateToProps = {\r\n    usersPage: InitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followInProgress: number[]\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n    setCurrentPage: (currentPage: number) => void\r\n    toogleFollowProgress: any\r\n    getUsers: any\r\n}\r\nexport type UsersPropsType = mapStateToProps & mapDispatchToPropsType\r\n\r\n\r\n// const mapStateToProps = (state: AppStateType): mapStateToProps => {\r\n//     return {\r\n//         usersPage: state.usersPage,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followInProgress: state.usersPage.followInProgress\r\n//     }\r\n// }\r\nconst mapStateToProps = (state: AppStateType): mapStateToProps => {\r\n    return {\r\n        usersPage: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followInProgress: followInProgress(state)\r\n    }\r\n}\r\n\r\nexport class UsersAPI extends React.Component<UsersPropsType, AppStateType> {\r\n    constructor(props: UsersPropsType) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n\r\n    }\r\n\r\n    onPageChanged = (pageNum: number) => {\r\n        this.props.getUsers(pageNum, this.props.pageSize)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n\r\n\r\n\r\n            <Users onPageChanged={this.onPageChanged}\r\n                   currentPage={this.props.currentPage}\r\n                   totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   users={this.props.usersPage.users}\r\n\r\n                   followInProgress={this.props.followInProgress}\r\n\r\n            /></>\r\n    }\r\n}\r\n\r\n\r\n const UsersContainer = compose<React.ComponentType>(connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toogleFollowProgress,\r\n        getUsers: requistUsers\r\n\r\n    }),\r\n)(UsersAPI)\r\nexport default UsersContainer"],"names":["Pagination","props","onPageChanged","currentPage","totalUsersCount","pageSize","pagesToDisplay","pages","numberPages","Math","ceil","i","push","useState","page","setPage","visiablePages","slice","onClick","map","p","nextPage","className","styles","User","user","follow","followInProgress","unfollow","to","id","src","photos","small","String","avatarIcon","followed","disabled","some","name","status","Users","users","ul","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","UsersAPI","pageNum","this","Preloader","React","compose","connect","setCurrentPage","toogleFollowProgress","requistUsers"],"sourceRoot":""}